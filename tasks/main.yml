---
- name: install dependencies
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - software-properties-common
    state: present
    force_apt_get: yes
    update_cache: yes

- name: add Docker apt key
  apt_key:
    url: "{{ docker_apt_key_url }}"
    state: present

- name: add Docker apt repository
  apt_repository:
    repo: "deb [arch={{ docker_apt_sources_arch }}] {{ docker_apt_sources_uri }} {{ docker_apt_sources_suite }} stable"
    state: present
    filename: docker

- name: install Docker CE
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
    force_apt_get: yes
    update_cache: yes

- name: create config directory
  file:
    path: /etc/docker
    state: directory

- name: set daemon config
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    lstrip_blocks: yes
  notify:
    - restart daemon

- name: start and enable daemon
  systemd:
    name: docker.service
    state: started
    enabled: yes

- name: check iptables rules
  import_tasks: check-iptables.yml
  when: docker_iptables_check

- name: restart daemon
  meta: flush_handlers

- name: set non-root users
  user:
    name: "{{ user }}"
    state: present
    groups:
      - docker
    append: yes
  loop: "{{ docker_users }}"
  loop_control:
    loop_var: user
  when: docker_users is defined

- name: install dependencies of Ansible modules for Docker
  include_tasks: install-modules-dependencies.yml
  when: docker_modules_dependencies_install

- name: install Compose binary
  include_tasks: install-compose-binary.yml
  when: docker_compose_binary_install
